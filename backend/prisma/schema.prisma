// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String     @unique
  phoneNumber  String     @unique
  isVerified   Boolean    @default(false)
  image        String?
  details      Json?     //address,city,houseDetails
  role         Role       @default(USER)
  refreshToken String?    @unique
  wishlist     Wishlist[]
  carts        Cart[]
  orders       Order[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Otp {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  code      String
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String     @unique
  description String
  category    String
  flavors     String[]
  sizes       String[]
  price       Int
  images      String[]
  wishlist    Wishlist[]
  carts       Cart[]

  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  orderItem orderItem[]
}

model Wishlist {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId
}

model Cart {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  user      User    @relation(fields: [userId], references: [id])
  userId    String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId
  quantity  Int
  flavor    String
  size      String
}

//working..................................

model Order {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  user          User        @relation(fields: [userId], references: [id])
  userId        String      @db.ObjectId
  orderItem     orderItem[]
  totalAmount   Int
  paymentMethod String
  status        Status
  createdAt     DateTime    @default(now())
}

model orderItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  orderId   String  @db.ObjectId
  order     Order   @relation(fields: [orderId], references: [id])
  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
  price     Int
}

enum Role {
  USER
  ADMIN
  RIDER
}

enum Status {
  Processing
  Completed
  Cancelled
}
